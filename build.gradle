buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.11.91' // M11
    }
}

plugins {
    id "eu.appsatori.fatjar" version "0.3"
    id "com.jfrog.bintray" version "1.0"
    id "maven-publish"
}
repositories {
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:0.11.91' // Kotlin M11
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.5.1.1.KotlinM11'
    testCompile 'org.slf4j:slf4j-simple:1.7.10'
    testCompile 'org.testng:testng:6.8.21'
}

for (prop in ['bintrayUser', 'bintrayKey']) {
    if (!hasProperty(prop)) {
        ext[prop] = "no value set in gradle.properties"
    }
}

group = "net.dean.kdown"
version = "0.3.0"

task wrapper(type: Wrapper) {
  gradleVersion = '2.3'
  distributionUrl = 'http://services.gradle.org/distributions/gradle-2.3-all.zip'
}

test {
    useTestNG()
    testLogging {
        // Show stderr and stdout (useful for exceptions)
        showStandardStreams = true
    }

    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor.className}.${descriptor.name}")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Add jars to artifacts
artifacts {
    archives sourcesJar, javadocJar, fatJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar { classifier "sources" }
            artifact javadocJar { classifier "javadoc" }
            artifact fatJar     { classifier "fat"     }
        }
    }
}

apply plugin: "kotlin"

bintray {
    apiUrl = "https://api.bintray.com/"
    user = bintrayUser
    key = bintrayKey

    publications = ['mavenJava']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        desc = 'Downloading files programmatically made easy'
        licenses = ['MIT']
        labels = ['kotlin', 'java', 'download', 'api']
    }
}

